#!/usr/bin/php
<?php
/*

Copyright 2011 Marin Software

This file is part of XtraBackup Manager.

XtraBackup Manager is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

XtraBackup Manager is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with XtraBackup Manager.  If not, see <http://www.gnu.org/licenses/>.

*/


	require('includes/init.php');

	// Defined options, used for helptext only.
	$optDef = Array(
					'h' => 'Help - Display this help text.',
					'e' => 'Export configuration from MySQL tables to CSV files in confdata/. Note: Overwrites any existing files!',
					'i' => 'Import CSV files in confdata into MySQL tables, making the configurations active.',
/*					'o' => 'Used with -i: overwrite existing configuration.',
					'a' => 'Used with -i: append to existing configuration. (default)',*/
				);
	ksort($optDef);

	// Define options and get them from cmdline
	$shortOpts = implode("", array_keys($optDef));
	$options = getOpt($shortOpts);

	print("\n".basename(__FILE__)." -- ".XBM_RELEASE_VERSION."\n");
/*	// Check options
	if( isSet($options['a']) && ! isSet($options['i']) ) {
		print(basename(__FILE__).": Error: You can only specify -a together with -i.\n");
                $options['h']=true;
	}
	if( isSet($options['o']) && ! isSet($options['i']) ) {
		print(basename(__FILE__).": Error: You can only specify -o together with -i.\n");
                $options['h']=true;
	}
*/
	// Show help and exit
	if( isSet($options['h']) || sizeOf($options) == 0) {
		$msg = "\nUsage: " . basename(__FILE__) . " OPTIONS [CONFDATA]\n\n";
		$msg .= "Parameters: \n";
		foreach($optDef as $opt => $desc) {
			$msg .= "  -".$opt."	".$desc."\n";
		}
		$msg .= "\n[CONFDATA]	Path to directory where CSV configuration files are stored. Defaults to './confdata/'.";
		print($msg."\n\n");	
		die();
	}

        // Setup logStream
        $log = new logStream(XBM_MAIN_LOG, false, $config['LOGS']['level']);

	$confDumper = new configCSV($log);
	// Check if last argument is an option or the directory path
	$a = $argv[count($argv)-1];
	if( substr($a, 0, 1) != "-" ) {
		$confDumper->setDumpDir($a);
	}

	/* -e Option -- Export configuration tables. */
	if( isSet($options['e']) ) {
		try {
			print("Exporting configuration files into " . $confDumper->getDumpDir() . ".\n");
			$confDumper->exportConfig();
		}
		catch(Exception $e) {
			print basename(__FILE__) . ': ' . $e->getMessage() . "\n";
			die();
		}
		print("Completed OK!\n");
	}

	// -i Option -- Import configuration tables.
 	// Apparently LOAD DATA INFILE is restricted by AppArmor on newer Ubuntu systems and this creates errors here.
	// https://bugs.launchpad.net/ubuntu/+source/mysql-dfsg-5.0/+bug/244406
	if( isSet($options['i']) ) {
		try {
			print("Importing configuration files from " . $confDumper->getDumpDir() . " into MySQL.\n");
			$confDumper->importConfig();
		}
		catch(Exception $e) {
			print basename(__FILE__) . ': ' . $e->getMessage() . "\n";
			die();
		}
		print("Completed OK!\n");
	}

	/* vi: set filetype=php */
?>
