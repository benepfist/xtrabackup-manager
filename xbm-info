#!/usr/bin/php
<?php
/*

Copyright 2011 Marin Software

This file is part of XtraBackup Manager.

XtraBackup Manager is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

XtraBackup Manager is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with XtraBackup Manager.  If not, see <http://www.gnu.org/licenses/>.

*/


	require('includes/init.php');

	// Defined options, used for helptext only.
	$optDef = Array(
					'h' => 'Help - Display this help text.',
					'l' => 'List the hosts in XBM.',
					'v' => 'List the backup volumes in XBM.'//,
					//'s' => 'Lists all scheduled backups.'
				);
	ksort($optDef);

	// Define options and get them from cmdline
	$shortOpts = 'hlvs';
	$options = getOpt($shortOpts);



	print("\n".basename(__FILE__)." -- ".XBM_RELEASE_VERSION."\n");

	// Show help and exit
	if( isSet($options['h']) || sizeOf($options) == 0) {
		$msg = "\nParameters: \n";
		foreach($optDef as $opt => $desc) {
			$msg .= "  -".$opt."	".$desc."\n";
		}
		print($msg."\n\n");	
		die();
	}


	/* -l Option -- List the hostnames */
	if( isSet($options['l']) ) {
		try { 
			print("\nListing Hosts:\n\n");
			$hostGetter = new hostGetter();
	
			$hosts = $hostGetter->getAll();
	
			if(sizeOf($hosts) == 0 ) {
				print("\tNo hosts found.\n");
			} else {
				foreach($hosts as $host) {
	
					$hostInfo = $host->getInfo();
	
					print("Host ID: ".$hostInfo['host_id']."  Hostname: ".$hostInfo['hostname']."\n");
					print("Description: ".$hostInfo['description']."\n");
					print("Active: ".$hostInfo['active']."  Last Backup: ".$hostInfo['last_backup']."\n");
					print("\n");
				}
			}
			print("\n");
		} catch ( Exception $e ) {
			die("An error occurred listing hosts: ".$e->getMessage()."\n\n");
		}
	}


	/* -v Option -- List the Backup volumes */
	if( isSet($options['v']) ) {
		try {
			print("\nListing Backup Volumes:\n\n");
			$volumeGetter = new volumeGetter();
			$volumes = $volumeGetter->getAll();
	
			if(sizeOf($volumes) == 0) {
				print("\tNo Backup Volumes found.\n");
			} else {
				foreach($volumes as $volume) {
	
					$volumeInfo = $volume->getInfo();
	
					print("Backup Volume ID: ".$volumeInfo['backup_volume_id']."  Name: ".$volumeInfo['name']."\n");
					print("Path: ".$volumeInfo['path']."\n");
					print("\n"); 
				}
			}
			print("\n");
		} catch ( Exception $e ) {
			die("An error occurred listing backup volumes: ".$e->getMessage()."\n\n");
		}
	}

	/* vi: set filetype=php */
?>
