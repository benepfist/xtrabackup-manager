#summary Backup Strategies explained

= Backup Strategies Explained =

XtraBackup Manager provides some different backup strategies that are used to control things like:

  * When should a FULL backup snapshot be taken?
  * When should an INCREMENTAL backup snapshot be taken?
  * How long should backups be kept for?

There are currently three backup strategies in XtraBackup Manager and each has a code that is really just a shorthand way of referring to the strategy within the software.

They are:

  * Full Only - Code: `FULLONLY`
  * Continuous Incremental - Code: `CONTINC`
  * Rotating Sets of Incremental Backups - Code: `ROTATING`

Each strategy is explained in detail below.


= Full Only =

This is the simplest backup strategy supported -- XtraBackup Manager will only ever take full backups of the target host each time the backup task runs. 

<img src="http://xtrabackup-manager.googlecode.com/svn/wiki/images/xbm-fullonly.png" align="center" />


You can configure the maximum number of these snapshots to keep. 

After each backup is complete, the retention policy will be applied and any number of backups beyond the maximum will be deleted, starting from the oldest snapshot. 

*IMPORTANT NOTE:* At the time of writing, this method is actually unsupported. You can emulate this with the `Rotating Sets of Incremental Backups` method. Simply use backup strategy code `ROTATING` and set the following parameters for the backup:

  * `rotate_method = AFTER_SNAPSHOT_COUNT`
  * `max_snapshot_groups = N` -- N is the number of full backups to keep before deleting the oldest.
  *  `rotate_snapshot_no = 1`


= Continuous Incremental =

The Continuous Incremental backup strategy is a more resource conscious way of maintaining snapshots of your databases at different points in time.

Rather than taking a full backup of your database every time you wish to take a backup, the Continuous Incremental method will take a full backup, or *seed*, first and after that it will only take incremental backups storing only the changes, or *deltas*, since the last backup was taken. 

*Diagram and explain the snapshot taking process here*

You may configure the maximum number of snapshots to maintain on a per backup task basis, and this is referred to as the *retention policy*.

The retention policy is applied after each successful backup -- if the number of snapshots exceeds the configured maximum at this point, the oldest set of deltas are applied to the seed.

At this point you can no longer restore from the point in time that the seed was taken -- the seed is now combined with the oldest set of deltas and effectively now representing the point in time that the incremental snapshot those deltas belong to was taken.

This process of merging the oldest set of deltas onto the seed is repeated until the total number of snapshots no longer exceeds the configured maximum for this backup task.

*Example here*

One of the drawbacks of the Continuous Incremental backup strategy is that restoring from backups can take quite a long time. The reason for this is that in order to perform a restore, the seed will be copied to the target location and then each set of deltas necessary to reach the desired point in time snapshot will be applied in sequence from oldest to newest.

This is even more of a problem when you consider that most commonly you will want to restore from the latest backup -- it means that of all of the snapshots, the latest backup will always take the longest to restore.

To offset this, this backup strategy supports enabling a feature called MaterializedBackups, which you should consider reading more about.



= Rotating Sets of Incremental Backups =

This is the most complex backup strategy, but it allows a great deal of flexibility. The concept here is that we consider a backup group as a full backup with corresponding sets of deltas. You may configure the number of groups you keep, as well as when new groups should be created in a variety of ways.

The benefit of keeping more than one group, is that should one seed or set of deltas be bad or broken in any way, you have another option -- in addition, you may more frequently take full backups, which means that the number of sets of deltas to be applied to reach a particular restore point will be less.

When using rotating groups, you must select a rotation method - there are two options: DAY_OF_WEEK and AFTER_SNAPSHOT_COUNT.

With the snapshot count rotation method, the first backup will be a FULL backup, after which incremental backups are taken until a total number of backups equals the number you configure. The next backup after that will be a full backup in a new group and the backups after that will be incrementals, based on the newly taken full backup. This cycle just repeats, however, retention is controlled based on the maximum number of groups to maintain. Once a new group is created beyond the maximum allowed, the oldest group will be removed until there are no more than the maximum.

With day of week, you simply select which day(s) of week you would like your FULL backups to be taken on -- XBM will "rotate" on the first snapshot taken for that day. "Rotate" essentially means it will create a new group with its own full backup and then proceed to take deltas until a "rotate_day_of_week" is encountered again. You can also configure a maximum number of deltas allowed, in case for some reason the backup is never running on the day of the week that it should. In that case it will not backup - You may configure if you consider that a fatal error that should be alerted, or if it should just silently do nothing/skip that backup.

The benefit of using day of week over snapshot count is that it allows you to firmly control which days your full backups should happen on.

Eg. If I deploy backups on a new host and I configure to take full backups on Sunday. I might kick off the first backup on a Wednesday -- in this case because it is the first backup ever for the host, it will take a full backup and then continue to take deltas until Sunday, when it will take a full backup again and then continue to rotate every Sunday from then on.

Again for day of week rotation, retention is controlled based on the maximum number of groups to maintain. Once a new group is created beyond the maximum allowed, the oldest group will be removed until there are no more than the maximum.